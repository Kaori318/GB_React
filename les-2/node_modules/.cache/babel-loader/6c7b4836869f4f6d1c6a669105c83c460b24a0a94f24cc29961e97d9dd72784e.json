{"ast":null,"code":"var _jsxFileName = \"E:\\\\GEEKBRAINS\\\\REACT\\\\homework\\\\GB_React\\\\les-2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: '0px',\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\nexport default function CenteredGrid() {\n  _s();\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"div\",\n        style: {\n          backgroundColor: \"#cfe8fc\",\n          height: \"100vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                className: classes.paper,\n                children: \"xs=3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 9,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                className: classes.paper,\n                children: \"xs=9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n// import './App.css';\n// import React, {useState, useEffect} from 'react'\n// // import {Form} from './components/Form'\n// // import { Message } from './components/Message';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Paper from '@material-ui/core/Paper';\n// import Grid from '@material-ui/core/Grid';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   paper: {\n//     padding: theme.spacing(2),\n//     textAlign: 'center',\n//     color: theme.palette.text.secondary,\n//   },\n// }));\n\n// function App() {\n\n//   const classes = useStyles();\n\n//   const [messageList, setMessageList] = useState([])\n//   const [messageBody, setMessageBody] = useState({\n//     text: '',\n//     author: '',\n//   })\n\n//   const ROBOT_MESSAGE = 'Сообщение получено'\n\n//   useEffect(() => {\n//     if(messageList.length > 0 && messageList.slice(-1)[0].author !== 'robot') {\n//       setTimeout(()=>{\n//         setMessageList(pervstate => [...pervstate, {text:ROBOT_MESSAGE, author: 'robot'}])\n//       }, 1000)\n//     }\n//   },[messageList])\n\n//   return (\n//     <div className={classes.root}>\n//     <Grid container spacing={3}>\n//       <Grid item xs={12}>\n//         <Paper className={classes.paper}>xs=12</Paper>\n//       </Grid>\n//       <Grid item xs={6}>\n//         <Paper className={classes.paper}>xs=6</Paper>\n//       </Grid>\n//       <Grid item xs={6}>\n//         <Paper className={classes.paper}>xs=6</Paper>\n//       </Grid>\n//       <Grid item xs={3}>\n//         <Paper className={classes.paper}>xs=3</Paper>\n//       </Grid>\n//       <Grid item xs={3}>\n//         <Paper className={classes.paper}>xs=3</Paper>\n//       </Grid>\n//       <Grid item xs={3}>\n//         <Paper className={classes.paper}>xs=3</Paper>\n//       </Grid>\n//       <Grid item xs={3}>\n//         <Paper className={classes.paper}>xs=3</Paper>\n//       </Grid>\n//     </Grid>\n//   </div>\n//     // <div className=\"App\">\n//     //   <div className=\"reverse\">\n//     //     <Form data={messageBody} setData={setMessageBody} setMessage={setMessageList}></Form>\n//     //   </div>\n//     //   <div className='messageList'>\n//     //     {\n//     //       messageList.map((e,i)=><Message text={e.text} author={e.author} key={i}></Message>)\n//     //     }\n//     //   </div> \n//     // </div>\n//   );\n// }\n\n// export default App;\n_s(CenteredGrid, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = CenteredGrid;\nvar _c;\n$RefreshReg$(_c, \"CenteredGrid\");","map":{"version":3,"names":["React","CssBaseline","Typography","Container","makeStyles","Paper","Grid","useStyles","theme","root","flexGrow","paper","padding","textAlign","color","palette","text","secondary","CenteredGrid","classes","backgroundColor","height"],"sources":["E:/GEEKBRAINS/REACT/homework/GB_React/les-2/src/App.js"],"sourcesContent":["import React from 'react';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport './App.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: '0px',\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\n\nexport default function CenteredGrid() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <Typography\n          component=\"div\"\n          style={{ backgroundColor: \"#cfe8fc\", height: \"100vh\" }}\n        >\n           <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={9}>\n          <Paper className={classes.paper}>xs=9</Paper>\n        </Grid>\n        </Grid>\n    </div>\n        </Typography>\n      </Container>\n    </React.Fragment>\n  );\n}\n\n// import './App.css';\n// import React, {useState, useEffect} from 'react'\n// // import {Form} from './components/Form'\n// // import { Message } from './components/Message';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Paper from '@material-ui/core/Paper';\n// import Grid from '@material-ui/core/Grid';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   paper: {\n//     padding: theme.spacing(2),\n//     textAlign: 'center',\n//     color: theme.palette.text.secondary,\n//   },\n// }));\n\n\n// function App() {\n\n//   const classes = useStyles();\n\n//   const [messageList, setMessageList] = useState([])\n//   const [messageBody, setMessageBody] = useState({\n//     text: '',\n//     author: '',\n//   })\n\n//   const ROBOT_MESSAGE = 'Сообщение получено'\n\n//   useEffect(() => {\n//     if(messageList.length > 0 && messageList.slice(-1)[0].author !== 'robot') {\n//       setTimeout(()=>{\n//         setMessageList(pervstate => [...pervstate, {text:ROBOT_MESSAGE, author: 'robot'}])\n//       }, 1000)\n//     }\n//   },[messageList])\n\n//   return (\n//     <div className={classes.root}>\n//     <Grid container spacing={3}>\n//       <Grid item xs={12}>\n//         <Paper className={classes.paper}>xs=12</Paper>\n//       </Grid>\n//       <Grid item xs={6}>\n//         <Paper className={classes.paper}>xs=6</Paper>\n//       </Grid>\n//       <Grid item xs={6}>\n//         <Paper className={classes.paper}>xs=6</Paper>\n//       </Grid>\n//       <Grid item xs={3}>\n//         <Paper className={classes.paper}>xs=3</Paper>\n//       </Grid>\n//       <Grid item xs={3}>\n//         <Paper className={classes.paper}>xs=3</Paper>\n//       </Grid>\n//       <Grid item xs={3}>\n//         <Paper className={classes.paper}>xs=3</Paper>\n//       </Grid>\n//       <Grid item xs={3}>\n//         <Paper className={classes.paper}>xs=3</Paper>\n//       </Grid>\n//     </Grid>\n//   </div>\n//     // <div className=\"App\">\n//     //   <div className=\"reverse\">\n//     //     <Form data={messageBody} setData={setMessageBody} setMessage={setMessageList}></Form>\n//     //   </div>\n//     //   <div className='messageList'>\n//     //     {\n//     //       messageList.map((e,i)=><Message text={e.text} author={e.author} key={i}></Message>)\n//     //     }\n//     //   </div> \n//     // </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAO,WAAW;AAAA;AAElB,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAK,KAAM;EACvCC,IAAI,EAAE;IACJC,QAAQ,EAAE;EACZ,CAAC;EACDC,KAAK,EAAE;IACLC,OAAO,EAAE,KAAK;IACdC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAEN,KAAK,CAACO,OAAO,CAACC,IAAI,CAACC;EAC5B;AACF,CAAC,CAAC,CAAC;AAGH,eAAe,SAASC,YAAY,GAAG;EAAA;EACrC,MAAMC,OAAO,GAAGZ,SAAS,EAAE;EAE3B,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf,QAAC,SAAS;MAAC,QAAQ,EAAC,IAAI;MAAA,uBACtB,QAAC,UAAU;QACT,SAAS,EAAC,KAAK;QACf,KAAK,EAAE;UAAEa,eAAe,EAAE,SAAS;UAAEC,MAAM,EAAE;QAAQ,CAAE;QAAA,uBAEtD;UAAK,SAAS,EAAEF,OAAO,CAACV,IAAK;UAAA,uBAClC,QAAC,IAAI;YAAC,SAAS;YAAC,OAAO,EAAE,CAAE;YAAA,wBACzB,QAAC,IAAI;cAAC,IAAI;cAAC,EAAE,EAAE,CAAE;cAAA,uBACf,QAAC,KAAK;gBAAC,SAAS,EAAEU,OAAO,CAACR,KAAM;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAa;cAAA;cAAA;cAAA;YAAA,QACxC,eACP,QAAC,IAAI;cAAC,IAAI;cAAC,EAAE,EAAE,CAAE;cAAA,uBACf,QAAC,KAAK;gBAAC,SAAS,EAAEQ,OAAO,CAACR,KAAM;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAa;cAAA;cAAA;cAAA;YAAA,QACxC;UAAA;YAAA;YAAA;YAAA;UAAA;QACA;UAAA;UAAA;UAAA;QAAA;MACL;QAAA;QAAA;QAAA;MAAA;IACW;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAErB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,GA1GwBO,YAAY;EAAA,QAClBX,SAAS;AAAA;AAAA,KADHW,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}