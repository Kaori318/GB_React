{"ast":null,"code":"var _jsxFileName = \"E:\\\\GEEKBRAINS\\\\REACT\\\\homework\\\\GB_React\\\\les-2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Form } from './components/Form';\nimport { Message } from './components/Message';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\nfunction App() {\n  _s();\n  const [messageList, setMessageList] = useState([]);\n  const [messageBody, setMessageBody] = useState({\n    text: '',\n    author: ''\n  });\n  const ROBOT_MESSAGE = 'Сообщение получено';\n  useEffect(() => {\n    if (messageList.length > 0 && messageList.slice(-1)[0].author !== 'robot') {\n      setTimeout(() => {\n        setMessageList(pervstate => [...pervstate, {\n          text: ROBOT_MESSAGE,\n          author: 'robot'\n        }]);\n      }, 1000);\n    }\n  }, [messageList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reverse\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        data: messageBody,\n        setData: setMessageBody,\n        setMessage: setMessageList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageList\",\n      children: messageList.map((e, i) => /*#__PURE__*/_jsxDEV(Message, {\n        text: e.text,\n        author: e.author\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Vrw5u9hdoXy7iUjDTDjjbFpxY0w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Form","Message","makeStyles","Paper","Grid","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","App","messageList","setMessageList","messageBody","setMessageBody","author","ROBOT_MESSAGE","length","slice","setTimeout","pervstate","map","e","i"],"sources":["E:/GEEKBRAINS/REACT/homework/GB_React/les-2/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from 'react'\nimport {Form} from './components/Form'\nimport { Message } from './components/Message';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\n\nfunction App() {\n\n  const [messageList, setMessageList] = useState([])\n  const [messageBody, setMessageBody] = useState({\n    text: '',\n    author: '',\n  })\n\n  const ROBOT_MESSAGE = 'Сообщение получено'\n\n  useEffect(() => {\n    if(messageList.length > 0 && messageList.slice(-1)[0].author !== 'robot') {\n      setTimeout(()=>{\n        setMessageList(pervstate => [...pervstate, {text:ROBOT_MESSAGE, author: 'robot'}])\n      }, 1000)\n    }\n  },[messageList])\n\n  return (\n    <div className=\"App\">\n      <div className=\"reverse\">\n        <Form data={messageBody} setData={setMessageBody} setMessage={setMessageList}></Form>\n      </div>\n      <div className='messageList'>\n        {\n          messageList.map((e,i)=><Message text={e.text} author={e.author} key={i}></Message>)\n        }\n      </div> \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,IAAI,QAAO,mBAAmB;AACtC,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,IAAI,MAAM,wBAAwB;AAAC;AAE1C,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAK,KAAM;EACvCC,IAAI,EAAE;IACJC,QAAQ,EAAE;EACZ,CAAC;EACDC,KAAK,EAAE;IACLC,OAAO,EAAEJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;IACzBC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAEP,KAAK,CAACQ,OAAO,CAACC,IAAI,CAACC;EAC5B;AACF,CAAC,CAAC,CAAC;AAGH,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC;IAC7CiB,IAAI,EAAE,EAAE;IACRO,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAG,oBAAoB;EAE1CxB,SAAS,CAAC,MAAM;IACd,IAAGmB,WAAW,CAACM,MAAM,GAAG,CAAC,IAAIN,WAAW,CAACO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACH,MAAM,KAAK,OAAO,EAAE;MACxEI,UAAU,CAAC,MAAI;QACbP,cAAc,CAACQ,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE;UAACZ,IAAI,EAACQ,aAAa;UAAED,MAAM,EAAE;QAAO,CAAC,CAAC,CAAC;MACpF,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,EAAC,CAACJ,WAAW,CAAC,CAAC;EAEhB,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAK,SAAS,EAAC,SAAS;MAAA,uBACtB,QAAC,IAAI;QAAC,IAAI,EAAEE,WAAY;QAAC,OAAO,EAAEC,cAAe;QAAC,UAAU,EAAEF;MAAe;QAAA;QAAA;QAAA;MAAA;IAAQ;MAAA;MAAA;MAAA;IAAA,QACjF,eACN;MAAK,SAAS,EAAC,aAAa;MAAA,UAExBD,WAAW,CAACU,GAAG,CAAC,CAACC,CAAC,EAACC,CAAC,kBAAG,QAAC,OAAO;QAAC,IAAI,EAAED,CAAC,CAACd,IAAK;QAAC,MAAM,EAAEc,CAAC,CAACP;MAAO,GAAMQ,CAAC;QAAA;QAAA;QAAA;MAAA,QAAY;IAAC;MAAA;MAAA;MAAA;IAAA,QAEjF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA9BQb,GAAG;AAAA,KAAHA,GAAG;AAgCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}