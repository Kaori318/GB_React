{"ast":null,"code":"var _jsxFileName = \"E:\\\\GEEKBRAINS\\\\REACT\\\\homework\\\\GB_React\\\\les-2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Form } from './components/Form';\nimport { Message } from './components/Message';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messageList, setMessageList] = useState([]);\n  const [messageBody, setMessageBody] = useState({\n    text: '',\n    author: ''\n  });\n  const ROBOT_MESSAGE = 'Сообщение получено';\n  useEffect(() => {\n    if (messageList.length > 0 && messageList.slice(-1)[0].author !== 'robot') {\n      setTimeout(() => {\n        setMessageList(pervstate => [...pervstate, {\n          text: ROBOT_MESSAGE,\n          author: 'robot'\n        }]);\n      }, 1000);\n    }\n  }, [messageList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: '#cfe8fc',\n          mwidth: '1000px',\n          height: '100vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reverse\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            data: messageBody,\n            setData: setMessageBody,\n            setMessage: setMessageList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageList\",\n          children: messageList.map((e, i) => /*#__PURE__*/_jsxDEV(Message, {\n            text: e.text,\n            author: e.author\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 34\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Vrw5u9hdoXy7iUjDTDjjbFpxY0w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Form","Message","CssBaseline","Box","Container","App","messageList","setMessageList","messageBody","setMessageBody","text","author","ROBOT_MESSAGE","length","slice","setTimeout","pervstate","bgcolor","mwidth","height","map","e","i"],"sources":["E:/GEEKBRAINS/REACT/homework/GB_React/les-2/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from 'react'\nimport {Form} from './components/Form'\nimport { Message } from './components/Message';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\n\nfunction App() {\n\n  const [messageList, setMessageList] = useState([])\n  const [messageBody, setMessageBody] = useState({\n    text: '',\n    author: '',\n  })\n\n  const ROBOT_MESSAGE = 'Сообщение получено'\n\n  useEffect(() => {\n    if(messageList.length > 0 && messageList.slice(-1)[0].author !== 'robot') {\n      setTimeout(()=>{\n        setMessageList(pervstate => [...pervstate, {text:ROBOT_MESSAGE, author: 'robot'}])\n      }, 1000)\n    }\n  },[messageList])\n\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <Box sx={{ bgcolor: '#cfe8fc', mwidth: '1000px', height: '100vh'}}>\n          <div className=\"reverse\">\n        <Form data={messageBody} setData={setMessageBody} setMessage={setMessageList}></Form>\n      </div>\n      <div className='messageList'>\n        {\n          messageList.map((e,i)=><Message text={e.text} author={e.author} key={i}></Message>)\n        }\n      </div> </Box>\n      </Container>\n\n     \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,IAAI,QAAO,mBAAmB;AACtC,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC;IAC7CY,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAG,oBAAoB;EAE1Cb,SAAS,CAAC,MAAM;IACd,IAAGO,WAAW,CAACO,MAAM,GAAG,CAAC,IAAIP,WAAW,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACH,MAAM,KAAK,OAAO,EAAE;MACxEI,UAAU,CAAC,MAAI;QACbR,cAAc,CAACS,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE;UAACN,IAAI,EAACE,aAAa;UAAED,MAAM,EAAE;QAAO,CAAC,CAAC,CAAC;MACpF,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,EAAC,CAACL,WAAW,CAAC,CAAC;EAEhB,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACb,QAAC,SAAS;MAAC,QAAQ,EAAC,IAAI;MAAA,uBACtB,QAAC,GAAG;QAAC,EAAE,EAAE;UAAEW,OAAO,EAAE,SAAS;UAAEC,MAAM,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAO,CAAE;QAAA,wBAClE;UAAK,SAAS,EAAC,SAAS;UAAA,uBAC1B,QAAC,IAAI;YAAC,IAAI,EAAEX,WAAY;YAAC,OAAO,EAAEC,cAAe;YAAC,UAAU,EAAEF;UAAe;YAAA;YAAA;YAAA;UAAA;QAAQ;UAAA;UAAA;UAAA;QAAA,QACjF,eACN;UAAK,SAAS,EAAC,aAAa;UAAA,UAExBD,WAAW,CAACc,GAAG,CAAC,CAACC,CAAC,EAACC,CAAC,kBAAG,QAAC,OAAO;YAAC,IAAI,EAAED,CAAC,CAACX,IAAK;YAAC,MAAM,EAAEW,CAAC,CAACV;UAAO,GAAMW,CAAC;YAAA;YAAA;YAAA;UAAA,QAAY;QAAC;UAAA;UAAA;UAAA;QAAA,QAEjF;MAAA;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QAGR;AAEV;AAAC,GApCQjB,GAAG;AAAA,KAAHA,GAAG;AAsCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}